[tool.poetry]
name = "file-type-identifier"
version = "0.1.0"
description = "Library for identifying file type"
authors = ["Kurbanov Bulat <b.kurbanov@speechki.org>"]
readme = "README.md"
license = "MIT"
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.9",
]
packages = [
  { include = "fti" }
]

[tool.poetry.dependencies]
python = "^3.9"
httpx = "^0.22.0"

[tool.poetry.dev-dependencies]
pytest = "^7.0.1"
pytest-cov = "^3.0.0"
pytest-asyncio = "^0.18.1"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 119
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.flake8]
ignore = [
    # Too many leading '#' for block comment ( https://www.flake8rules.com/rules/E266.html )
    "E266",
    # Whitespace before ':' ( https://www.flake8rules.com/rules/E203.html )
    "E203",
    # Line break occurred before a binary operator ( https://www.flake8rules.com/rules/W503.html )
    "W503"
]
max-line-length = 119
max-complexity = 15
select = "B,C,E,F,W,T4,B9"
exclude = [
    # No need to traverse our git directory
    ".git",
    # There's no value in checking cache directories
    "__pycache__",
    # The old directory contains Flake8 2.0
    "old",
    # This contains our built documentation
    "build",
    # This contains builds of flake8 that we don't want to check
    "dist",
]
# Module imported but unused ( https://www.flake8rules.com/rules/F401.html )
per-file-ignores = [
  # Tests
  "test_*.py:E501",
  "tests.py:E501",
  "__init__.py:F401"
]

[tool.isort]
profile = "black"
line_length = 119
only_sections = true
force_sort_within_sections = true
lines_after_imports = 2
lexicographical = true
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
src_paths = ["fti"]
